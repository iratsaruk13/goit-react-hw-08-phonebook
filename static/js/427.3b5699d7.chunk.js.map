{"version":3,"file":"static/js/427.3b5699d7.chunk.js","mappings":"+SAEaA,EAAaC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wFAOxBC,EAAYH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wEAMxBG,EAAYL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2aAqBxBK,EAAQP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wEAMlBO,EAAiBT,EAAAA,GAAAA,OAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,+c,2KC1BrCS,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,MAAM,kBAAkBC,SAAS,kBACrDC,SAAUJ,EAAAA,KACPG,SAAS,gCACTE,IAAI,EAAG,6CACPC,IAAI,GAAI,iDAGE,SAASC,IAAU,IAADC,EAAAC,EACzBC,GAAWC,EAAAA,EAAAA,MAEjBC,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYhB,KALtBiB,EAAQJ,EAARI,SACAC,EAAYL,EAAZK,aACAC,EAAKN,EAALM,MACaC,EAAMP,EAAnBQ,UAAaD,OAYf,OACEE,EAAAA,EAAAA,MAAClC,EAAAA,GAAU,CAACmC,SAAUL,GARP,SAAHM,GAA2B,IAAtBrB,EAAKqB,EAALrB,MAAOE,EAAQmB,EAARnB,SACxBM,GAASc,EAAAA,EAAAA,IAAM,CAACtB,MAAAA,EAAOE,SAAAA,KACvBc,GACF,IAK+CO,SAAA,EAE3CJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAACnC,EAAAA,GAAS,CAACoC,QAAQ,QAAOF,SAAC,YAC3BC,EAAAA,EAAAA,KAACjC,EAAAA,IAASmC,EAAAA,EAAAA,GAAA,CAACC,KAAK,QAAQC,GAAG,SAAYd,EAAS,WAC/CG,EAAOjB,QAASmB,EAAAA,EAAAA,MAAC1B,EAAAA,GAAK,CAAA8B,SAAA,CAAC,IAAc,QAAbjB,EAACW,EAAOjB,aAAK,IAAAM,OAAA,EAAZA,EAAcuB,eAE1CV,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAACnC,EAAAA,GAAS,CAACoC,QAAQ,WAAUF,SAAC,eAC9BC,EAAAA,EAAAA,KAACjC,EAAAA,IAASmC,EAAAA,EAAAA,GAAA,CAACC,KAAK,WAAWC,GAAG,YAAed,EAAS,cACrDG,EAAOf,WAAYiB,EAAAA,EAAAA,MAAC1B,EAAAA,GAAK,CAAA8B,SAAA,CAAC,IAAiB,QAAhBhB,EAACU,EAAOf,gBAAQ,IAAAK,OAAA,EAAfA,EAAiBsB,eAEhDL,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,QAAQ,YAAYC,MAAM,UAAUL,KAAK,SAAQJ,SAAC,YAKhE,C","sources":["components/FormContact/FormContact.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 0 auto;\n`;\n\nexport const FormLabel = styled.label`\n  margin-right: auto;\n  font-size: 20px;\n  color: #300339;\n`;\n\nexport const FormInput = styled.input`\n  font-size: 16px;\n  color: #300339;\n  border-radius: 15px;\n  border: none;\n  &:hover,\n  &:focus {\n    border: 1px solid #a942d9;\n  }\n  padding: 15px;\n  width: 100%;\n  background-color: #e9d8f9;\n  &:hover {\n    background-color: #ddaaeb;\n  }\n  transition: box-shadow 250ms cubic-bezier(0.42, 0, 0.58, 1);\n  :hover {\n    box-shadow: 0 0 0 5px rgba(96, 0, 118, 0.2), 0 1px 2px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const Error = styled.div`\n  position: absolute;\n  color: #cb1717;\n  font-size: 14px;\n`;\n\nexport const FormContactBtn = styled.button`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  font-weight: 500;\n  color: #300339;\n  background-color: #e1bbe3;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  width: 100%;\n  border-radius: 10px;\n  border: none;\n  padding: 16px;\n  transition: box-shadow 250ms cubic-bezier(0.42, 0, 0.58, 1);\n  :hover {\n    box-shadow: 0 2px 5px rgba(51, 0, 66, 0.2), 0 4px 6px rgba(0, 0, 0, 0.2);\n  }\n`;\n","import React from \"react\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  StyledForm,\n  FormLabel,\n  FormInput,\n  Error,\n} from \"../../components/FormContact/FormContact.styled\";\nimport { useDispatch} from \"react-redux\";\n\nimport { logIn } from \"redux/Auth/operationsAuth\";\nimport { Button } from \"@mui/material\";\n\n\nconst schema = Yup.object().shape({\n  email: Yup.string().email(\"Email required\").required(\"Email required\"),\n  password: Yup.string()\n    .required(\"The field Number is required\")\n    .min(7, \"The number must be at least 7 digits long\")\n    .max(14, \"The number can consist of maximum 14 digits\")\n});\n\nexport default function Login () {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = ({email, password}) => {\n    dispatch(logIn({email, password}))\n    reset();\n  };\n\n  \n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      \n      <div>\n        <FormLabel htmlFor=\"email\">Email:</FormLabel>\n        <FormInput type=\"email\" id=\"email\" {...register(\"email\")} />\n        {errors.email && <Error> {errors.email?.message}</Error>}\n      </div>\n      <div>\n        <FormLabel htmlFor=\"password\">Password:</FormLabel>\n        <FormInput type=\"password\" id=\"password\" {...register(\"password\")} />\n        {errors.password && <Error> {errors.password?.message}</Error>}\n      </div>\n      <Button variant=\"contained\" color=\"success\" type=\"submit\">\n        Login\n      </Button>\n    </StyledForm>\n  );\n};\n"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","FormLabel","_templateObject2","FormInput","_templateObject3","Error","_templateObject4","FormContactBtn","_templateObject5","schema","Yup","shape","email","required","password","min","max","Login","_errors$email","_errors$password","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","_jsxs","onSubmit","_ref","logIn","children","_jsx","htmlFor","_objectSpread","type","id","message","Button","variant","color"],"sourceRoot":""}